#!/usr/bin/env tclsh

set here [file dirname [file normalize [info script]]]
lappend auto_path $here
lappend auto_path [file join $::env(DAQROOT) TclLibs]

package provide ReadoutGUIPanel 1.0
package provide ActionFilter 1.0

package require Actions
package require DefaultActions


namespace eval ReadoutGUIPanel {}

proc ReadoutGUIPanel::Log {name class msg} {
		puts "$name $class $msg"
}

proc pause {} {
	puts "Received PAUSE"
}

proc end {} {
	puts "Received end"
	exit
}
namespace eval ActionFilter {
  variable pipe ""
  variable parser [::Actions %AUTO%]
  set ::DefaultActions::name "ActionFilter"
  

  proc startFilter {} {
    variable pipe
    variable parser
    # kill off old filter if it still exists
    if {$pipe ne ""} {
      set pids [pid $pipe]
      foreach pid $pids { exec kill $pid }
    }

#    set cmd [file join /home tompkins actions slave filter UserFilter]
    set cmd [file join /user s800 converged_daq jorge filter UserFilter]
#    set pipe [open "| $cmd  --source=tcp://localhost/tompkins --sink=file:///dev/null --oneshot |& cat" r]
    set pipe [open "| $cmd  --source=file:///user/s800/stagearea/experiment/run1016/run-1016-00.evt --sink=tcp://localhost/s800filter |& cat" r]
#    set pipe [open "| $cmd  --source=file:///user/s800/stagearea/commission/run150/run-0150-00-fixed.evt --sink=tcp://localhost/s800filter |& cat" r]
    chan configure $pipe -blocking 0
    chan configure $pipe -buffering line
    chan event $pipe readable [list $parser onReadable $pipe]
    puts "Filter is $pipe"
  }

  namespace export enter leave attach
}


::ActionFilter::startFilter

vwait forever
